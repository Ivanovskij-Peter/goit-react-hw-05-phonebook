{"version":3,"sources":["components/filter/Filter.js","components/contacts/ContactsForm.js","components/contacts/ContactsItems.js","components/phonebook/PhoneBook.js","components/App.js","index.js"],"names":["Filter","filter","getFilterName","style","display","marginTop","marginBottom","width","type","name","value","onChange","ContactsForm","state","contacts","number","handleChange","event","target","setState","handleSubmit","preventDefault","props","getContact","id","uuidv4","onSubmit","this","border","height","placeholder","backgroundColor","color","Component","ContactsItems","contactsItems","deleteContact","TransitionGroup","component","className","map","el","CSSTransition","key","timeout","classNames","onClick","PhoneBook","isExsist","contact","some","setTimeout","prev","filterItems","toLowerCase","includes","prevState","localStorage","getItem","JSON","parse","prevPops","setItem","stringify","in","appear","unmountOnExit","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca6e3381.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Filter({ filter, getFilterName }) {\n  return (\n    <>\n      <input\n        style={{\n          display: 'block',\n          marginTop: '5px',\n          marginBottom: '10px',\n          width: '100%',\n        }}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={getFilterName}\n      ></input>\n    </>\n  );\n}\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass ContactsForm extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n  handleChange = event => {\n    const name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.getContact({\n      name: this.state.name,\n      id: uuidv4(),\n      number: this.state.number,\n    });\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        style={{\n          border: '1px solid whisper',\n          width: '400px',\n          height: '165px',\n        }}\n      >\n        <label>Name</label>\n        <input\n          name=\"name\"\n          style={{\n            display: 'block',\n            marginTop: '5px',\n            marginBottom: '10px',\n            width: '100%',\n          }}\n          placeholder=\"add name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        ></input>\n        <label>Number</label>\n        <input\n          name=\"number\"\n          style={{\n            display: 'block',\n            marginTop: '5px',\n            marginBottom: '10px',\n            width: '100%',\n          }}\n          placeholder=\"add number\"\n          value={this.state.number}\n          onChange={this.handleChange}\n        ></input>\n        <button\n          style={{\n            marginTop: '15px',\n            width: '100%',\n            backgroundColor: 'blue',\n            color: 'white',\n            height: '35px',\n          }}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default ContactsForm;\n","import React from 'react';\nimport './ContactsItems.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nfunction ContactsItems({ contactsItems, deleteContact }) {\n  return (\n    <TransitionGroup component=\"ul\" className=\"list\">\n      {contactsItems.map(el => (\n        <CSSTransition key={el.id} timeout={300} classNames=\"list-fade\">\n          <li key={el.id} className=\"item\">\n            <p>{el.name}</p>\n            <p>{el.number}</p>\n            <button className=\"btn\" onClick={() => deleteContact(el.id)}>\n              X\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\nexport default ContactsItems;\n","import React, { Component } from 'react';\nimport Filter from '../filter/Filter';\nimport ContactsForm from '../contacts/ContactsForm';\nimport ContactsItems from '../contacts/ContactsItems';\nimport './PhoneBook.css';\nimport { CSSTransition } from 'react-transition-group';\n\nclass PhoneBook extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    isExsist: false,\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n      ? JSON.parse(localStorage.getItem('contacts'))\n      : [];\n    this.setState({ contacts });\n  }\n  componentDidUpdate(prevPops, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  getContact = contact => {\n    const result = this.state.contacts.some(el => el.name === contact.name);\n    if (result) {\n      this.setState({ isExsist: true });\n      setTimeout(() => {\n        this.setState({ isExsist: false });\n      }, 1000);\n    } else {\n      this.setState(prev => {\n        return { ...prev, contacts: [...prev.contacts, contact] };\n      });\n    }\n  };\n\n  getFilterName = event => {\n    this.setState({ filter: event.target.value });\n  };\n  filterItems = () => {\n    return this.state.filter\n      ? this.state.contacts.filter(el =>\n          el.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n        )\n      : this.state.contacts;\n  };\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"Phone-slideIn\"\n          timeout={1000}\n          unmountOnExit\n        >\n          <h1 className=\"Phone\">PhoneBook</h1>\n        </CSSTransition>\n        <CSSTransition\n          in={this.state.isExsist}\n          classNames=\"alert\"\n          timeout={500}\n          unmountOnExit\n        >\n          <h2 className=\"alert\">This name is already in contacts!</h2>\n        </CSSTransition>\n        <ContactsForm getContact={this.getContact} />\n        {this.state.contacts.length > 1 && (\n          <Filter\n            filter={this.state.filter}\n            getFilterName={this.getFilterName}\n          />\n        )}\n        <ContactsItems\n          contactsItems={this.filterItems()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\nexport default PhoneBook;\n","import React from 'react';\nimport PhoneBook from './phonebook/PhoneBook';\n\nfunction App() {\n  return (\n    <>\n      <PhoneBook />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}